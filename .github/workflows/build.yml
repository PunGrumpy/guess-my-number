name: Release

on:
  push:
    branches:
      - main
      - master

env:
  VERSION: 1.0.0
  NAME: guess-my-number

jobs:
  update_version:
    name: Update version # 1.0.0 -> 1.0.1 -> 1.0.2 -> ... if 1.0.9 -> 1.0.10 and so on
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update version
        id: update_version
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const latestRelease = releases[0];
            const latestVersion = latestRelease.tag_name;
            const version = latestVersion.split('.');
            const major = version[0];
            const minor = version[1];
            const patch = version[2];
            const newPatch = parseInt(patch) + 1;
            const newVersion = `${major}.${minor}.${newPatch}`;
            core.setOutput('version', newVersion);
            core.setOutput('name', '${{ env.NAME }}');
            core.setOutput('tag_name', newVersion);
            core.setOutput('release_name', 'Release ${{ env.NAME }}@' + newVersion);
            core.setOutput('draft', false);
            core.setOutput('prerelease', false);
            console.log('New version: ' + newVersion);
            console.log('New tag name: ' + newVersion);
            console.log('New release name: ' + 'Release ${{ env.NAME }}@' + newVersion);
            console.log('New draft: ' + false);
            console.log('New prerelease: ' + false);
            await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: newVersion,
              name: 'Release ${{ env.NAME }}@' + newVersion,
              draft: false,
              prerelease: false,
            });
  setup_java:
    name: Setup Java
    needs: update_version
    runs-on: ubuntu-latest
    steps:
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
  release:
    needs: setup_java
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build with maven
        run: mvn --batch-mode --update-snapshots --no-transfer-progress clean package
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: |
            target/guess-my-number-1.0.0.jar
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.NAME }}@${{ env.VERSION }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/guess-my-number-1.0.0.jar
          asset_name: guess-my-number-1.0.0.jar
          asset_content_type: application/java-archive
      - name: Output
        run: |
          echo "Upload URL: ${{ steps.create_release.outputs.upload_url }}"
          echo "Upload Asset ID: ${{ steps.upload-release-asset.outputs.asset_id }}"
          echo "Release ID: ${{ steps.create_release.outputs.id }}"
